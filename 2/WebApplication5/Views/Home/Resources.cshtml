@{
    ViewData["Title"] = "Resources";
}
<header class="main-header"></header>
<section>
    <article>
        <header>Ресурсы и методы</header>
        <p>
            Вернемся к стартовой строке запроса и вспомним, что в ней присутствует такой параметр, как
            <strong>URI</strong>. Это расшифровывается, как <i>Uniform Resource Identifier</i> — единообразный
            идентификатор ресурса. Ресурс — это, как правило, файл на сервере (пример URI в данном случае
            <i>'/styles.css'</i>), но вообще ресурсом может являться и какой-либо абстрактный объект
            <i>'/blogs/webdev/'</i> — указывает на блок «Веб-разработка», а не на конкретный файл).
        </p>
        <p>
            Тип HTTP-запроса (также называемый <i>HTTP-метод</i>) указывает серверу на то, какое действие мы
            хотим произвести с ресурсом. Изначально (в начале 90-х) предполагалось, что клиент может хотеть от
            ресурса только одно — получить его, однако сейчас по протоколу HTTP можно создавать посты,
            редактировать профиль, удалять сообщения и многое другое. И эти действия сложно объединить
            термином «получение».
        </p>
        <p>
            Для разграничения действий с ресурсами на уровне HTTP-методов и были придуманы следующие варианты:
        </p>
        <p>
            <strong>GET</strong><br>
            Метод HTTP запроса GET используется для получения информации с сервера по указанному URI. HTTP
            запросы, использующие метод GET должны получать только данные и не должны оказывать никакого
            влияния на эти данные.
        </p>
        <p>
            <strong>HEAD</strong><br>
            Принцип работы метода HEAD в HTTP запросе аналогичен методу GET, но метод HEAD не передает тело
            сообщения (HTTP объект).
        </p>
        <p>
            <strong>POST</strong><br>
            HTTP запрос POST используется для отправки данных на HTTP сервер, например, когда вы заполняете
            HTML форму на сайте.
        </p>
        <p>
            <strong>PUT</strong><br>
            HTTP запросы с методом PUT сохраняются под запрашиваемым URI. То есть метод PUT используется
            для замены контента.
        </p>
        <p>
            <strong>DELETE</strong><br>
            Метод DELETE при HTTP запросе позволяет запросить сервер удалить данные ресурса, указанного в URI.
        </p>
        <p>
            <strong>CONNECT</strong><br>
            HTTP запрос с методом CONNECT позволяет установить  туннель к серверу, который указан в URI.
        </p>
        <p>
            <strong>OPTIONS</strong><br>
            HTTP запрос с методом OPTION позволяет получить параметры для связи с ресурсом.
        </p>
        <p>
            <strong>TRACE</strong><br>
            При HTTP запросе с методом TRACE можно отследить то, что происходит с вашими запросами.
        </p>
        <p>
            Однако спецификация HTTP не обязывает сервер понимать все методы — обязателен только GET, а также
            не указывает серверу, что он должен делать при получении запроса с тем или иным методом. А это значит,
            что сервер в ответ на запрос <i>DELETE /index.php HTTP/1.1</i> не обязан удалять страницу index.php на
            сервере, так же как на запрос <i>GET /index.php HTTP/1.1</i> не обязан возвращать вам страницу index.php,
            например он может ее удалять.
        </p>
        <p>
            Список методов, которые можно применить к ресурсу, может быть указан в поле заголовка <i>Allow</i>.
            HTTP сервер всегда должен возвращать код состояния ответа, чтобы сообщить клиенту: допустим метод или нет.
        </p>
    </article>
    <footer>
        За предоставленную информацию спасибо ресурсам: habrahabr.ru, webgyry.info, zametkinapolyah.ru.
    </footer>
</section>
